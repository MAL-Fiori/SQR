<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:smartTable="sap.ui.comp.smarttable" xmlns:l="sap.ui.layout"
	xmlns:f="sap.ui.layout.form" xmlns:u="sap.ui.unified" xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:table="sap.ui.table">
	<Dialog resizable="true" title="Edit Finding" afterClose="dialogAfterClose" draggable="true" contentWidth="70%">
		<VBox>
			<IconTabBar class="sapUiResponsiveContentPadding" select="onIconTabBarChange">
				<items>
					<IconTabFilter icon="sap-icon://hint" text="info" key="1">
						<f:Form editable="true">
							<f:layout>
								<f:ResponsiveGridLayout labelSpanXL="4" labelSpanL="3" labelSpanM="3" labelSpanS="12" adjustLabelSpan="true" emptySpanXL="0" emptySpanL="0"
									emptySpanM="0" emptySpanS="0" columnsXL="2" columnsL="2" columnsM="2" singleContainerFullSize="false"/>
							</f:layout>
							<f:formContainers>
								<f:FormContainer>
									<f:formElements>
										<f:FormElement label="Supplier">
											<f:fields>
												<Input value="{SelectedValueHelp>/SupplierId}" editable="false"/>
											</f:fields>
										</f:FormElement>
									<f:FormElement label="Subject">
											<f:fields>
												<Select id="SubjectSelect" forceSelection="false" change="onSubjectChange" selectedKey="{SelectedValueHelp>/Subject}"
													items="{ path: '/ZWM_SUBJECTS_VH', sorter: { path: 'name' } }">
													<core:Item key="{id}" text="{name}"/>
												</Select>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="Category">
											<f:fields>
												<Select forceSelection="false" id="CategorySelect" change="onCategoryChange" selectedKey="{SelectedValueHelp>/Category}"
													items="{ path: '/ZWM_CAT_VH', sorter: { path: 'name' } }">
													<core:Item key="{id}" text="{name}"/>
												</Select>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="Question">
											<f:fields>
												<Select id="questionSelect" change="onQuestionChange" forceSelection="false" selectedKey="{SelectedValueHelp>/Question}"
													items="{ path: '/ZWM_QUESTIONS_VH', sorter: { path: 'question_content' } }">
													<core:Item key="{question_id}" text="{question_content}"/>
												</Select>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="Score">
											<f:fields>
												<Select id="ScoreSelect" forceSelection="false" selectedKey="{SelectedValueHelp>/Score}" items="{ path: '/ZWM_SCORE_VH', sorter: { path: 'Text' } }">
													<core:Item key="{Id}" text="{Text}"/>
												</Select>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="Quality Category">
											<f:fields>
												<Select id="QualityCategorySelect" forceSelection="false" items="{ path: '/ZWM_CAT_QUESTION', sorter: { path: 'quality_category' } }"
													enabled="false" selectedKey="{SelectedValueHelp>/QualityCategory}">
													<core:Item key="{quality_category}" text="{quality_category}"/>
												</Select>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="Status">
											<f:fields>
												<Select id="StatusSelect" forceSelection="false" items="{ path: '/ZWM_STATUS_VH', sorter: { path: 'Text' } }" selectedKey="{SelectedValueHelp>/Status}">
													<core:Item key="{Id}" text="{Text}"/>
												</Select>
											</f:fields>
										</f:FormElement>
									</f:formElements>
								</f:FormContainer>
								<f:FormContainer>
									<f:formElements>
									<f:FormElement label="Inspection Findings">
											<f:fields>
												<TextArea id="InspectionFindingsText" maxLength="256" rows="3" enabled="true" value="{SelectedValueHelp>/Finding}"/>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="Inspection Location">
											<f:fields>
												<Input id="InspectionLocation" editable="true" value="{SelectedValueHelp>/InspectionLocation}"/>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="Supplier Risk Category">
											<f:fields>
												<Select id="RiskCategorySelect" forceSelection="false" items="{ path: '/ZWM_RISK_CAT_VH', sorter: { path: 'text' } }" selectedKey="{SelectedValueHelp>/SupplerRiskCategory}">
													<core:Item key="{id}" text="{text}"/>
												</Select>
											</f:fields>
										</f:FormElement>
									<f:FormElement label="Short term Containment">
											<f:fields>
												<Input id="ContainmentInput" enabled="true" maxLength="256" value="{SelectedValueHelp>/ShortTermContainment}"/>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="Supplier Causal Factor:">
											<f:fields>
												<Input id="CasualFactor" maxLength="256" editable="true" value="{SelectedValueHelp>/SupplierCasualFactor}"/>
											</f:fields>
										</f:FormElement>
									</f:formElements>
								</f:FormContainer>
							</f:formContainers>
						</f:Form>
					</IconTabFilter>
					<IconTabFilter icon="sap-icon://attachment" text="Attachments" key="2">
							<List mode="Delete" delete="handleDelete" id="NewInspectionEditAttachment"
							items="{ path: 'AttachmentDisplayModel>/Attachment', parameters: { operationMode: 'Client'}}"
							noDataText="{No Data}" >
							<headerToolbar>
								<Toolbar>
									<ToolbarSpacer/>
									<u:FileUploader id="oFileUploaderNewInspectionEdit" change="onFileUploaderChangePress" buttonOnly="true" iconOnly="true" icon="sap-icon://add" multiple="false" sameFilenameAllowed="true"/>
								</Toolbar>
							</headerToolbar>
							<items>
								<ObjectListItem icon="{ path: 'AttachmentDisplayModel>type', formatter: '.formatter.attachmentIcon' }" title="{AttachmentDisplayModel>name}"/>
							</items>
						</List>
						<!--<UploadCollection noDataText="No files found." noDataDescription="Drop files to upload, or use the &quot;+&quot; button."-->
						<!--	uploadEnabled="true" uploadComplete="onUploadComplete" fileDeleted="onFileDeleted"-->
						<!--	beforeUploadStarts="onBeforeUploadStarts" uploadTerminated="onUploadTerminated" change="onChange"-->
						<!--	items="{ path: 'SelectedValueHelp>/Attachments', templateShareable: false }" uploadUrl="{SelectedValueHelp>/uploadUrl}">-->
						<!--	<items>-->
						<!--		<UploadCollectionItem id="oFileUploaderNewInspectionEdit" visibleDelete="true" visibleEdit="false" contributor="{SelectedValueHelp>CreatedByName}" fileName="{SelectedValueHelp>FileName}" documentId="{SelectedValueHelp>FileName}"-->
						<!--			uploadedDate="{SelectedValueHelp>CreatedAt}" url="/sap/opu/odata/SAP/ZSQRMBWA_SRV/Attachments(FindingId='{FindingId}',Id='{Id}')/$value">-->
						<!--			<customData>-->
						<!--				<core:CustomData value="{Id}"/>-->
						<!--				<core:CustomData value="{SelectedValueHelp>/Findingid}"/>-->
						<!--			</customData>-->
						<!--		</UploadCollectionItem>-->
						<!--	</items>-->
						<!--</UploadCollection>-->
					</IconTabFilter>
				</items>
			</IconTabBar>
		</VBox>
		<beginButton>
			<Button type="Accept" text="Save" icon="sap-icon://accept" press="onDialogSubmitButton" enabled="{editVisibilityModel>/visible}">
				<customData>
					<core:CustomData value="{SelectedValueHelp>/InspectionId}"/>
					<core:CustomData value="{SelectedValueHelp>/Findingid}"/>
				</customData>
			</Button>
		</beginButton>
		<endButton>
			<Button type="Default" text="Cancel" icon="sap-icon://sys-cancel" press="onDialogCancelButton">
					<customData>
					<core:CustomData value="{SelectedValueHelp>/InspectionId}"/>
					<core:CustomData value="{SelectedValueHelp>/Findingid}"/>
				</customData>
			</Button>
		</endButton>
	</Dialog>
</core:FragmentDefinition>